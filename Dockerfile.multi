# syntax=docker/dockerfile:1.6
ARG TARGETPLATFORM   # still declared for later use

#############################################
#  STAGE 1 — base: install dependencies
#############################################
# 1️⃣  Remove --platform=$BUILDPLATFORM here
FROM node:20-alpine AS base
WORKDIR /app

RUN apk add --no-cache curl jemalloc
ENV LD_PRELOAD=/usr/lib/libjemalloc.so.2

RUN npm config set fetch-retry-maxtimeout 600000 \
 && npm config set fetch-retries 5 \
 && npm config set fetch-retry-mintimeout 15000

COPY package*.json ./
COPY packages/data-provider/package*.json ./packages/data-provider/
COPY packages/mcp/package*.json          ./packages/mcp/
COPY packages/data-schemas/package*.json ./packages/data-schemas/
COPY client/package*.json                ./client/
COPY api/package*.json                   ./api/

RUN --mount=type=cache,target=/root/.npm \
    npm ci --no-audit --fund=false --progress=false

#############################################
#  STAGE 2 — build
#############################################
FROM base AS build
COPY . .
ENV NODE_OPTIONS="--max-old-space-size=2048"
RUN npm run build         # uses the alias you added

#############################################
#  STAGE 3 — runtime  (hard‑code amd64)
#############################################
# 2️⃣  Keep this pinned to the deploy arch
FROM --platform=linux/amd64 node:20-alpine AS runtime
WORKDIR /app
RUN apk add --no-cache curl jemalloc
ENV LD_PRELOAD=/usr/lib/libjemalloc.so.2

# 3️⃣  Bring back the uv binary
COPY --from=ghcr.io/astral-sh/uv:0.6.13 /uv /uvx /bin/

# copy package.json files first
COPY --from=build /app/package*.json ./
COPY --from=build /app/api/package*.json                   ./api/
COPY --from=build /app/packages/data-provider/package.json ./packages/data-provider/
COPY --from=build /app/packages/mcp/package.json           ./packages/mcp/
COPY --from=build /app/packages/data-schemas/package.json  ./packages/data-schemas/
COPY --from=build /app/client/package.json                 ./client/

# prod‑only install (workspace links)
RUN --mount=type=cache,target=/root/.npm \
    npm ci --omit=dev --no-audit --fund=false --progress=false

# copy compiled artifacts & configs
COPY --from=build /app/packages/data-provider/dist ./packages/data-provider/dist
COPY --from=build /app/packages/mcp/dist          ./packages/mcp/dist
COPY --from=build /app/packages/data-schemas/dist ./packages/data-schemas/dist
COPY --from=build /app/client/dist                ./client/dist
COPY --from=build /app/api                        ./api
COPY --from=build /app/config                     ./config

WORKDIR /app/api
EXPOSE 3080
ENV HOST=0.0.0.0
CMD ["node", "server/index.js"]
